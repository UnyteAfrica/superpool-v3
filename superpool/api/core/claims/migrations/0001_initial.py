# Generated by Django 5.0.6 on 2024-08-29 17:24

import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Claim",
            fields=[
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        verbose_name="Unique ID used internally to reference and identify claim objects",
                    ),
                ),
                (
                    "claim_number",
                    models.CharField(
                        help_text="Claim Reference Number issued by insurer to identify and manage claim tracking process ",
                        max_length=50,
                        unique=True,
                        verbose_name="Claim Number",
                    ),
                ),
                (
                    "claim_date",
                    models.DateField(
                        auto_now=True,
                        db_index=True,
                        verbose_name="Date at which a claim is created",
                    ),
                ),
                ("claim_type", models.CharField(max_length=30, null=True)),
                (
                    "incident_date",
                    models.DateField(null=True, verbose_name="Date of Incident"),
                ),
                ("incident_description", models.TextField(null=True)),
                ("amount", models.DecimalField(decimal_places=2, max_digits=10)),
                (
                    "estimated_loss",
                    models.DecimalField(decimal_places=2, max_digits=10, null=True),
                ),
                (
                    "payout_amount",
                    models.DecimalField(decimal_places=2, max_digits=10, null=True),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("accepted", "Accepted"),
                            ("approved", "Approved"),
                            ("pending", "Pending"),
                            ("denied", "Rejected"),
                            ("paid", "Paid"),
                            ("offer_sent", "Offer sent"),
                            ("offer_accepted", "Offer accepted"),
                        ],
                        default="pending",
                        max_length=30,
                    ),
                ),
                ("notes", models.TextField(blank=True, null=True)),
            ],
            options={
                "verbose_name": "claim",
                "verbose_name_plural": "claims",
                "ordering": ["-claim_date", "-created_at"],
            },
        ),
        migrations.CreateModel(
            name="ClaimDocument",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "evidence_type",
                    models.CharField(
                        choices=[
                            ("video", "Video"),
                            ("audio", "Audio"),
                            ("document", "Document"),
                            ("picture", "Picture"),
                        ],
                        help_text="Type of evidence uploaded.",
                        max_length=10,
                        verbose_name="Evidence Type",
                    ),
                ),
                (
                    "document_name",
                    models.CharField(
                        help_text="Name of the document uploaded.",
                        max_length=255,
                        verbose_name="Document Name",
                    ),
                ),
                (
                    "document_url",
                    models.URLField(
                        help_text="Reference to the stored document (e.g., Google Cloud Storage blob name).",
                        max_length=1024,
                        null=True,
                        verbose_name="File Reference",
                    ),
                ),
                ("uploaded_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "verbose_name": "Claim Document",
                "verbose_name_plural": "Claim Documents",
                "ordering": ["-uploaded_at"],
            },
        ),
        migrations.CreateModel(
            name="ClaimWitness",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "full_name",
                    models.CharField(
                        help_text='Full name of the witness in the format, "First Name Last Name"',
                        max_length=100,
                    ),
                ),
                ("contact_phone", models.CharField()),
                ("contact_email", models.EmailField(max_length=254)),
                (
                    "statement",
                    models.CharField(
                        help_text="A brief statement from the witness about the incident",
                        max_length=255,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="StatusTimeline",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("accepted", "Accepted"),
                            ("approved", "Approved"),
                            ("pending", "Pending"),
                            ("denied", "Rejected"),
                            ("paid", "Paid"),
                            ("offer_sent", "Offer sent"),
                            ("offer_accepted", "Offer accepted"),
                        ],
                        max_length=30,
                    ),
                ),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
            ],
        ),
    ]
