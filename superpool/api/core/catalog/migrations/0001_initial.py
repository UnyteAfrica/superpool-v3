# Generated by Django 5.0.6 on 2024-08-29 17:24

import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Beneficiary",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("first_name", models.CharField(max_length=40)),
                ("middle_name", models.CharField(blank=True, max_length=40, null=True)),
                ("last_name", models.CharField(max_length=40)),
                ("email", models.EmailField(max_length=254, unique=True)),
                ("phone_number", models.CharField(max_length=15)),
                ("address", models.TextField(null=True)),
                (
                    "relationship",
                    models.CharField(
                        help_text="Relationship to the policy holder", max_length=40
                    ),
                ),
                (
                    "date_of_birth",
                    models.DateField(
                        help_text="Date of birth of the beneficiary", null=True
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Price",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("amount", models.DecimalField(decimal_places=2, max_digits=10)),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "commision",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=3, null=True
                    ),
                ),
                (
                    "discount_amount",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "surcharges",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Product",
            fields=[
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_trashed", models.BooleanField(default=False)),
                ("trashed_at", models.DateTimeField(blank=True, null=True)),
                ("restored_at", models.DateTimeField(blank=True, null=True)),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        help_text="Unique identifier for the package",
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Name of the package offered by the insurance provider",
                        max_length=255,
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True, help_text="Description of the package", null=True
                    ),
                ),
                (
                    "product_type",
                    models.CharField(
                        choices=[
                            ("Life", "Life Insurance"),
                            ("Health", "Health Insurance"),
                            ("Auto", "Auto Insurance"),
                            ("Gadget", "Gadget Insurance"),
                            ("Travel", "Travel Insurance"),
                            ("Home", "Home Insurance"),
                        ],
                        help_text="Type of insurance package",
                        max_length=255,
                    ),
                ),
                (
                    "coverage_details",
                    models.TextField(
                        blank=True,
                        help_text="Detailed breakdown of what's covered",
                        null=True,
                    ),
                ),
                (
                    "is_live",
                    models.BooleanField(
                        default=True, help_text="Indicates if the package is live"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Quote",
            fields=[
                (
                    "quote_code",
                    models.CharField(
                        editable=False,
                        help_text="Assigned identifier for managing quote objects",
                        primary_key=True,
                        serialize=False,
                        unique=True,
                        verbose_name="Quote Code",
                    ),
                ),
                (
                    "base_price",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Price of quote excluding  discount",
                        max_digits=10,
                    ),
                ),
                (
                    "expires_in",
                    models.DateTimeField(
                        auto_now_add=True, help_text="The expiry date of the quote."
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "pending"),
                            ("accepted", "accepted"),
                            ("declined", "declined"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                (
                    "additional_metadata",
                    models.JSONField(
                        blank=True,
                        help_text="Additional information about the quote",
                        null=True,
                    ),
                ),
            ],
            options={
                "verbose_name": "quote",
                "verbose_name_plural": "quotes",
            },
        ),
        migrations.CreateModel(
            name="Policy",
            fields=[
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_trashed", models.BooleanField(default=False)),
                ("trashed_at", models.DateTimeField(blank=True, null=True)),
                ("restored_at", models.DateTimeField(blank=True, null=True)),
                (
                    "policy_id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        help_text="Unique identifier for the policy",
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "policy_number",
                    models.CharField(
                        blank=True,
                        help_text="Policy Refrence Number assigned by the insurer e.g GI86585700-1, AXA2024727-2, LEAD18002-42, etc",
                        null=True,
                        unique=True,
                    ),
                ),
                (
                    "effective_from",
                    models.DateField(help_text="Date the policy was purchased"),
                ),
                (
                    "effective_through",
                    models.DateField(help_text="Date the policy expires"),
                ),
                (
                    "premium",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Amount paid for the policy",
                        max_digits=10,
                    ),
                ),
                (
                    "renewable",
                    models.BooleanField(
                        default=False, help_text="Indicates if the policy is renewable"
                    ),
                ),
                (
                    "renewal_date",
                    models.DateTimeField(
                        blank=True,
                        help_text="Date when this insurance policy is due for renewal",
                        null=True,
                    ),
                ),
                (
                    "inspection_required",
                    models.BooleanField(
                        default=False,
                        help_text="Indicates if an inspection is required before the policy can be purchased",
                    ),
                ),
                (
                    "cerfication_required",
                    models.BooleanField(
                        default=False,
                        help_text="Indicates if any certifications are required before the policy can be purchased",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("accepted", "Accepted"),
                            ("cancelled", "Cancelled"),
                            ("active", "Active"),
                        ],
                        default="active",
                        help_text="Current status of the policy",
                        max_length=20,
                    ),
                ),
                (
                    "cancellation_initiator",
                    models.CharField(
                        blank=True,
                        help_text="Who requested for cancellation of this policy?",
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "cancellation_reason",
                    models.TextField(
                        blank=True,
                        help_text="Reason for policy cancellation",
                        null=True,
                    ),
                ),
                (
                    "cancellation_date",
                    models.DateTimeField(
                        blank=True,
                        help_text="Date when the policy was cancelled",
                        null=True,
                    ),
                ),
                (
                    "beneficiaries",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Beneficiaries of this policy",
                        related_name="beneficiaries",
                        to="catalog.beneficiary",
                        verbose_name="Beneficiaries",
                    ),
                ),
            ],
        ),
    ]
